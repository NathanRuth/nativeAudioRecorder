{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./elements/Rect","data":{"isAsync":false}},{"name":"./elements/Circle","data":{"isAsync":false}},{"name":"./elements/Ellipse","data":{"isAsync":false}},{"name":"./elements/Polygon","data":{"isAsync":false}},{"name":"./elements/Polyline","data":{"isAsync":false}},{"name":"./elements/Line","data":{"isAsync":false}},{"name":"./elements/Svg","data":{"isAsync":false}},{"name":"./elements/Path","data":{"isAsync":false}},{"name":"./elements/G","data":{"isAsync":false}},{"name":"./elements/Text","data":{"isAsync":false}},{"name":"./elements/TSpan","data":{"isAsync":false}},{"name":"./elements/TextPath","data":{"isAsync":false}},{"name":"./elements/Use","data":{"isAsync":false}},{"name":"./elements/Image","data":{"isAsync":false}},{"name":"./elements/Symbol","data":{"isAsync":false}},{"name":"./elements/Defs","data":{"isAsync":false}},{"name":"./elements/LinearGradient","data":{"isAsync":false}},{"name":"./elements/RadialGradient","data":{"isAsync":false}},{"name":"./elements/Stop","data":{"isAsync":false}},{"name":"./elements/ClipPath","data":{"isAsync":false}},{"name":"./elements/Pattern","data":{"isAsync":false}},{"name":"./elements/Mask","data":{"isAsync":false}},{"name":"./elements/Marker","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SvgAst = SvgAst;\n  exports.SvgXml = SvgXml;\n  exports.fetchText = fetchText;\n  exports.SvgUri = SvgUri;\n  exports.getStyle = getStyle;\n  exports.astToReact = astToReact;\n  exports.parse = _parse;\n  exports.camelCase = exports.SvgFromUri = exports.SvgFromXml = exports.err = exports.tags = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _Rect = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./elements/Rect\"));\n\n  var _Circle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./elements/Circle\"));\n\n  var _Ellipse = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./elements/Ellipse\"));\n\n  var _Polygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"./elements/Polygon\"));\n\n  var _Polyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"./elements/Polyline\"));\n\n  var _Line = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./elements/Line\"));\n\n  var _Svg = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./elements/Svg\"));\n\n  var _Path = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./elements/Path\"));\n\n  var _G = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./elements/G\"));\n\n  var _Text = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./elements/Text\"));\n\n  var _TSpan = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./elements/TSpan\"));\n\n  var _TextPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./elements/TextPath\"));\n\n  var _Use = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./elements/Use\"));\n\n  var _Image = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./elements/Image\"));\n\n  var _Symbol = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[25], \"./elements/Symbol\"));\n\n  var _Defs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[26], \"./elements/Defs\"));\n\n  var _LinearGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[27], \"./elements/LinearGradient\"));\n\n  var _RadialGradient = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[28], \"./elements/RadialGradient\"));\n\n  var _Stop = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[29], \"./elements/Stop\"));\n\n  var _ClipPath = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[30], \"./elements/ClipPath\"));\n\n  var _Pattern = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[31], \"./elements/Pattern\"));\n\n  var _Mask = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[32], \"./elements/Mask\"));\n\n  var _Marker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[33], \"./elements/Marker\"));\n\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\8.17.0.11170\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-svg\\\\src\\\\xml.tsx\";\n\n  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\n  function _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  var tags = {\n    svg: _Svg.default,\n    circle: _Circle.default,\n    ellipse: _Ellipse.default,\n    g: _G.default,\n    text: _Text.default,\n    tspan: _TSpan.default,\n    textPath: _TextPath.default,\n    path: _Path.default,\n    polygon: _Polygon.default,\n    polyline: _Polyline.default,\n    line: _Line.default,\n    rect: _Rect.default,\n    use: _Use.default,\n    image: _Image.default,\n    symbol: _Symbol.default,\n    defs: _Defs.default,\n    linearGradient: _LinearGradient.default,\n    radialGradient: _RadialGradient.default,\n    stop: _Stop.default,\n    clipPath: _ClipPath.default,\n    pattern: _Pattern.default,\n    mask: _Mask.default,\n    marker: _Marker.default\n  };\n  exports.tags = tags;\n\n  function missingTag() {\n    return null;\n  }\n\n  function SvgAst(_ref) {\n    var ast = _ref.ast,\n        override = _ref.override;\n\n    if (!ast) {\n      return null;\n    }\n\n    var props = ast.props,\n        children = ast.children;\n    return _react.default.createElement(_Svg.default, (0, _extends2.default)({}, props, override, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }), children);\n  }\n\n  function SvgXml(props) {\n    var xml = props.xml,\n        override = props.override;\n    var ast = (0, _react.useMemo)(function () {\n      return xml !== null ? _parse(xml) : null;\n    }, [xml]);\n    return _react.default.createElement(SvgAst, {\n      ast: ast,\n      override: override || props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 10\n      }\n    });\n  }\n\n  function fetchText(uri) {\n    var response;\n    return _regenerator.default.async(function fetchText$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(fetch(uri));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regenerator.default.awrap(response.text());\n\n          case 5:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  var err = console.error.bind(console);\n  exports.err = err;\n\n  function SvgUri(props) {\n    var uri = props.uri;\n\n    var _useState = (0, _react.useState)(null),\n        _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n        xml = _useState2[0],\n        setXml = _useState2[1];\n\n    (0, _react.useEffect)(function () {\n      uri ? fetchText(uri).then(setXml).catch(err) : setXml(null);\n    }, [uri]);\n    return _react.default.createElement(SvgXml, {\n      xml: xml,\n      override: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    });\n  }\n\n  var SvgFromXml = function (_Component) {\n    (0, _inherits2.default)(SvgFromXml, _Component);\n\n    var _super = _createSuper(SvgFromXml);\n\n    function SvgFromXml() {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, SvgFromXml);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        ast: null\n      };\n      return _this;\n    }\n\n    (0, _createClass2.default)(SvgFromXml, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.parse(this.props.xml);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var xml = this.props.xml;\n\n        if (xml !== prevProps.xml) {\n          this.parse(xml);\n        }\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(xml) {\n        try {\n          this.setState({\n            ast: xml ? _parse(xml) : null\n          });\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            ast = this.state.ast;\n        return _react.default.createElement(SvgAst, {\n          ast: ast,\n          override: props.override || props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 12\n          }\n        });\n      }\n    }]);\n    return SvgFromXml;\n  }(_react.Component);\n\n  exports.SvgFromXml = SvgFromXml;\n\n  var SvgFromUri = function (_Component2) {\n    (0, _inherits2.default)(SvgFromUri, _Component2);\n\n    var _super2 = _createSuper(SvgFromUri);\n\n    function SvgFromUri() {\n      var _this2;\n\n      (0, _classCallCheck2.default)(this, SvgFromUri);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.state = {\n        xml: null\n      };\n      return _this2;\n    }\n\n    (0, _createClass2.default)(SvgFromUri, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.fetch(this.props.uri);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var uri = this.props.uri;\n\n        if (uri !== prevProps.uri) {\n          this.fetch(uri);\n        }\n      }\n    }, {\n      key: \"fetch\",\n      value: function fetch(uri) {\n        return _regenerator.default.async(function fetch$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.t0 = this;\n\n                if (!uri) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 5;\n                return _regenerator.default.awrap(fetchText(uri));\n\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 9;\n                break;\n\n              case 8:\n                _context2.t1 = null;\n\n              case 9:\n                _context2.t2 = _context2.t1;\n                _context2.t3 = {\n                  xml: _context2.t2\n                };\n\n                _context2.t0.setState.call(_context2.t0, _context2.t3);\n\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t4 = _context2[\"catch\"](0);\n                console.error(_context2.t4);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this, [[0, 14]], Promise);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this.props,\n            xml = this.state.xml;\n        return _react.default.createElement(SvgFromXml, {\n          xml: xml,\n          override: props,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 12\n          }\n        });\n      }\n    }]);\n    return SvgFromUri;\n  }(_react.Component);\n\n  exports.SvgFromUri = SvgFromUri;\n\n  var upperCase = function upperCase(_match, letter) {\n    return letter.toUpperCase();\n  };\n\n  var camelCase = function camelCase(phrase) {\n    return phrase.replace(/[:-]([a-z])/g, upperCase);\n  };\n\n  exports.camelCase = camelCase;\n\n  function getStyle(string) {\n    var style = {};\n    var declarations = string.split(';');\n    var length = declarations.length;\n\n    for (var i = 0; i < length; i++) {\n      var declaration = declarations[i];\n\n      if (declaration.length !== 0) {\n        var split = declaration.split(':');\n        var _property = split[0];\n        var value = split[1];\n        style[camelCase(_property.trim())] = value.trim();\n      }\n    }\n\n    return style;\n  }\n\n  function astToReact(value, index) {\n    if (typeof value === 'object') {\n      var Tag = value.Tag,\n          props = value.props,\n          children = value.children;\n      return _react.default.createElement(Tag, (0, _extends2.default)({\n        key: index\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 7\n        }\n      }), children.map(astToReact));\n    }\n\n    return value;\n  }\n\n  function repeat(str, i) {\n    var result = '';\n\n    while (i--) {\n      result += str;\n    }\n\n    return result;\n  }\n\n  var toSpaces = function toSpaces(tabs) {\n    return repeat('  ', tabs.length);\n  };\n\n  function locate(source, i) {\n    var lines = source.split('\\n');\n    var nLines = lines.length;\n    var column = i;\n    var line = 0;\n\n    for (; line < nLines; line++) {\n      var length = lines[line].length;\n\n      if (column >= length) {\n        column -= length;\n      } else {\n        break;\n      }\n    }\n\n    var before = source.slice(0, i).replace(/^\\t+/, toSpaces);\n    var beforeExec = /(^|\\n).*$/.exec(before);\n    var beforeLine = beforeExec && beforeExec[0] || '';\n    var after = source.slice(i);\n    var afterExec = /.*(\\n|$)/.exec(after);\n    var afterLine = afterExec && afterExec[0];\n    var pad = repeat(' ', beforeLine.length);\n    var snippet = \"\" + beforeLine + afterLine + \"\\n\" + pad + \"^\";\n    return {\n      line: line,\n      column: column,\n      snippet: snippet\n    };\n  }\n\n  var validNameCharacters = /[a-zA-Z0-9:_-]/;\n  var whitespace = /[\\s\\t\\r\\n]/;\n  var quotemarks = /['\"]/;\n\n  function _parse(source, middleware) {\n    var length = source.length;\n    var currentElement = null;\n    var state = metadata;\n    var children = null;\n    var root;\n    var stack = [];\n\n    function error(message) {\n      var _locate = locate(source, i),\n          line = _locate.line,\n          column = _locate.column,\n          snippet = _locate.snippet;\n\n      throw new Error(message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug. Please raise an issue\\n\\n\" + snippet);\n    }\n\n    function metadata() {\n      while (i + 1 < length && (source[i] !== '<' || !validNameCharacters.test(source[i + 1]))) {\n        i++;\n      }\n\n      return neutral();\n    }\n\n    function neutral() {\n      var text = '';\n      var char;\n\n      while (i < length && (char = source[i]) !== '<') {\n        text += char;\n        i += 1;\n      }\n\n      if (/\\S/.test(text)) {\n        children.push(text);\n      }\n\n      if (source[i] === '<') {\n        return openingTag;\n      }\n\n      return neutral;\n    }\n\n    function openingTag() {\n      var char = source[i];\n\n      if (char === '?') {\n        return neutral;\n      }\n\n      if (char === '!') {\n        var start = i + 1;\n\n        if (source.slice(start, i + 3) === '--') {\n          return comment;\n        }\n\n        var end = i + 8;\n\n        if (source.slice(start, end) === '[CDATA[') {\n          return cdata;\n        }\n\n        if (/doctype/i.test(source.slice(start, end))) {\n          return neutral;\n        }\n      }\n\n      if (char === '/') {\n        return closingTag;\n      }\n\n      var tag = getName();\n      var props = {};\n      var element = {\n        tag: tag,\n        props: props,\n        children: [],\n        parent: currentElement,\n        Tag: tags[tag] || missingTag\n      };\n\n      if (currentElement) {\n        children.push(element);\n      } else {\n        root = element;\n      }\n\n      getAttributes(props);\n      var style = props.style;\n\n      if (typeof style === 'string') {\n        element.styles = style;\n        props.style = getStyle(style);\n      }\n\n      var selfClosing = false;\n\n      if (source[i] === '/') {\n        i += 1;\n        selfClosing = true;\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      if (!selfClosing) {\n        currentElement = element;\n        children = element.children;\n        stack.push(element);\n      }\n\n      return neutral;\n    }\n\n    function comment() {\n      var index = source.indexOf('-->', i);\n\n      if (!~index) {\n        error('expected -->');\n      }\n\n      i = index + 2;\n      return neutral;\n    }\n\n    function cdata() {\n      var index = source.indexOf(']]>', i);\n\n      if (!~index) {\n        error('expected ]]>');\n      }\n\n      children.push(source.slice(i + 7, index));\n      i = index + 2;\n      return neutral;\n    }\n\n    function closingTag() {\n      var tag = getName();\n\n      if (!tag) {\n        error('Expected tag name');\n      }\n\n      if (currentElement && tag !== currentElement.tag) {\n        error(\"Expected closing tag </\" + tag + \"> to match opening tag <\" + currentElement.tag + \">\");\n      }\n\n      if (source[i] !== '>') {\n        error('Expected >');\n      }\n\n      stack.pop();\n      currentElement = stack[stack.length - 1];\n\n      if (currentElement) {\n        var _currentElement = currentElement;\n        children = _currentElement.children;\n      }\n\n      return neutral;\n    }\n\n    function getName() {\n      var name = '';\n      var char;\n\n      while (i < length && validNameCharacters.test(char = source[i])) {\n        name += char;\n        i += 1;\n      }\n\n      return name;\n    }\n\n    function getAttributes(props) {\n      while (i < length) {\n        if (!whitespace.test(source[i])) {\n          return;\n        }\n\n        allowSpaces();\n        var name = getName();\n\n        if (!name) {\n          return;\n        }\n\n        var value = true;\n        allowSpaces();\n\n        if (source[i] === '=') {\n          i += 1;\n          allowSpaces();\n          value = getAttributeValue();\n\n          if (!isNaN(+value) && value.trim() !== '') {\n            value = +value;\n          }\n        }\n\n        props[camelCase(name)] = value;\n      }\n    }\n\n    function getAttributeValue() {\n      return quotemarks.test(source[i]) ? getQuotedAttributeValue() : getUnquotedAttributeValue();\n    }\n\n    function getUnquotedAttributeValue() {\n      var value = '';\n\n      do {\n        var char = source[i];\n\n        if (char === ' ' || char === '>' || char === '/') {\n          return value;\n        }\n\n        value += char;\n        i += 1;\n      } while (i < length);\n\n      return value;\n    }\n\n    function getQuotedAttributeValue() {\n      var quotemark = source[i++];\n      var value = '';\n      var escaped = false;\n\n      while (i < length) {\n        var char = source[i++];\n\n        if (char === quotemark && !escaped) {\n          return value;\n        }\n\n        if (char === '\\\\' && !escaped) {\n          escaped = true;\n        }\n\n        value += escaped ? \"\\\\\" + char : char;\n        escaped = false;\n      }\n\n      return value;\n    }\n\n    function allowSpaces() {\n      while (i < length && whitespace.test(source[i])) {\n        i += 1;\n      }\n    }\n\n    var i = 0;\n\n    while (i < length) {\n      if (!state) {\n        error('Unexpected character');\n      }\n\n      state = state();\n      i += 1;\n    }\n\n    if (state !== neutral) {\n      error('Unexpected end of input');\n    }\n\n    if (root) {\n      var xml = (middleware ? middleware(root) : root) || root;\n\n      var _ast = xml.children.map(astToReact);\n\n      var jsx = xml;\n      jsx.children = _ast;\n      return jsx;\n    }\n\n    return null;\n  }\n});","lineCount":760,"map":[[34,0,1,0],[36,0,8,0],[38,0,9,0],[40,0,10,0],[42,0,11,0],[44,0,12,0],[46,0,13,0],[48,0,14,0],[50,0,15,0],[52,0,16,0],[54,0,17,0],[56,0,18,0],[58,0,19,0],[60,0,20,0],[62,0,21,0],[64,0,22,0],[66,0,23,0],[68,0,24,0],[70,0,25,0],[72,0,26,0],[74,0,27,0],[76,0,28,0],[78,0,29,0],[80,0,30,0],[88,0,32,7],[88,6,32,13,"tags"],[88,10,32,51],[88,13,32,54],[89,0,33,2,"svg"],[89,4,33,2,"svg"],[89,7,33,5],[89,9,33,7,"Svg"],[89,21,32,54],[90,0,34,2,"circle"],[90,4,34,2,"circle"],[90,10,34,8],[90,12,34,10,"Circle"],[90,27,32,54],[91,0,35,2,"ellipse"],[91,4,35,2,"ellipse"],[91,11,35,9],[91,13,35,11,"Ellipse"],[91,29,32,54],[92,0,36,2,"g"],[92,4,36,2,"g"],[92,5,36,3],[92,7,36,5,"G"],[92,17,32,54],[93,0,37,2,"text"],[93,4,37,2,"text"],[93,8,37,6],[93,10,37,8,"Text"],[93,23,32,54],[94,0,38,2,"tspan"],[94,4,38,2,"tspan"],[94,9,38,7],[94,11,38,9,"TSpan"],[94,25,32,54],[95,0,39,2,"textPath"],[95,4,39,2,"textPath"],[95,12,39,10],[95,14,39,12,"TextPath"],[95,31,32,54],[96,0,40,2,"path"],[96,4,40,2,"path"],[96,8,40,6],[96,10,40,8,"Path"],[96,23,32,54],[97,0,41,2,"polygon"],[97,4,41,2,"polygon"],[97,11,41,9],[97,13,41,11,"Polygon"],[97,29,32,54],[98,0,42,2,"polyline"],[98,4,42,2,"polyline"],[98,12,42,10],[98,14,42,12,"Polyline"],[98,31,32,54],[99,0,43,2,"line"],[99,4,43,2,"line"],[99,8,43,6],[99,10,43,8,"Line"],[99,23,32,54],[100,0,44,2,"rect"],[100,4,44,2,"rect"],[100,8,44,6],[100,10,44,8,"Rect"],[100,23,32,54],[101,0,45,2,"use"],[101,4,45,2,"use"],[101,7,45,5],[101,9,45,7,"Use"],[101,21,32,54],[102,0,46,2,"image"],[102,4,46,2,"image"],[102,9,46,7],[102,11,46,9,"Image"],[102,25,32,54],[103,0,47,2,"symbol"],[103,4,47,2,"symbol"],[103,10,47,8],[103,12,47,10,"Symbol"],[103,27,32,54],[104,0,48,2,"defs"],[104,4,48,2,"defs"],[104,8,48,6],[104,10,48,8,"Defs"],[104,23,32,54],[105,0,49,2,"linearGradient"],[105,4,49,2,"linearGradient"],[105,18,49,16],[105,20,49,18,"LinearGradient"],[105,43,32,54],[106,0,50,2,"radialGradient"],[106,4,50,2,"radialGradient"],[106,18,50,16],[106,20,50,18,"RadialGradient"],[106,43,32,54],[107,0,51,2,"stop"],[107,4,51,2,"stop"],[107,8,51,6],[107,10,51,8,"Stop"],[107,23,32,54],[108,0,52,2,"clipPath"],[108,4,52,2,"clipPath"],[108,12,52,10],[108,14,52,12,"ClipPath"],[108,31,32,54],[109,0,53,2,"pattern"],[109,4,53,2,"pattern"],[109,11,53,9],[109,13,53,11,"Pattern"],[109,29,32,54],[110,0,54,2,"mask"],[110,4,54,2,"mask"],[110,8,54,6],[110,10,54,8,"Mask"],[110,23,32,54],[111,0,55,2,"marker"],[111,4,55,2,"marker"],[111,10,55,8],[111,12,55,10,"Marker"],[112,0,32,54],[112,3,32,7],[115,0,58,0],[115,11,58,9,"missingTag"],[115,21,58,0],[115,24,58,22],[116,0,59,2],[116,11,59,9],[116,15,59,2],[117,0,60,1],[119,0,92,7],[119,11,92,16,"SvgAst"],[119,17,92,7],[119,24,92,52],[120,0,92,52],[120,8,92,25,"ast"],[120,11,92,52],[120,19,92,25,"ast"],[120,22,92,52],[121,0,92,52],[121,8,92,30,"override"],[121,16,92,52],[121,24,92,30,"override"],[121,32,92,52],[123,0,93,2],[123,8,93,6],[123,9,93,7,"ast"],[123,12,93,2],[123,14,93,12],[124,0,94,4],[124,13,94,11],[124,17,94,4],[125,0,95,3],[127,0,92,52],[127,8,96,10,"props"],[127,13,92,52],[127,16,96,30,"ast"],[127,19,92,52],[127,20,96,10,"props"],[127,25,92,52],[128,0,92,52],[128,8,96,17,"children"],[128,16,92,52],[128,19,96,30,"ast"],[128,22,92,52],[128,23,96,17,"children"],[128,31,92,52],[129,0,97,2],[129,11,98,4],[129,40,98,5],[129,52,98,4],[129,81,98,13,"props"],[129,86,98,4],[129,88,98,24,"override"],[129,96,98,4],[130,0,98,4],[131,0,98,4],[132,0,98,4],[133,0,98,4],[134,0,98,4],[135,0,98,4],[135,8,99,7,"children"],[135,16,98,4],[135,17,97,2],[136,0,102,1],[138,0,104,7],[138,11,104,16,"SvgXml"],[138,17,104,7],[138,18,104,23,"props"],[138,23,104,7],[138,25,104,40],[139,0,104,40],[139,8,105,10,"xml"],[139,11,104,40],[139,14,105,28,"props"],[139,19,104,40],[139,20,105,10,"xml"],[139,23,104,40],[140,0,104,40],[140,8,105,15,"override"],[140,16,104,40],[140,19,105,28,"props"],[140,24,104,40],[140,25,105,15,"override"],[140,33,104,40],[141,0,106,2],[141,8,106,8,"ast"],[141,11,106,11],[141,14,106,14],[141,34,106,37],[142,0,106,37],[142,13,106,44,"xml"],[142,16,106,47],[142,21,106,52],[142,25,106,44],[142,28,106,59,"parse"],[142,34,106,64],[142,35,106,65,"xml"],[142,38,106,64],[142,39,106,44],[142,42,106,72],[142,46,106,37],[143,0,106,37],[143,5,106,14],[143,7,106,79],[143,8,107,4,"xml"],[143,11,106,79],[143,12,106,14],[143,13,106,2],[144,0,109,2],[144,11,109,9],[144,40,109,10],[144,46,109,9],[145,0,109,17],[145,6,109,17],[145,9,109,20],[145,11,109,22,"ast"],[145,14,109,9],[146,0,109,27],[146,6,109,27],[146,14,109,35],[146,16,109,37,"override"],[146,24,109,45],[146,28,109,49,"props"],[146,33,109,9],[147,0,109,9],[148,0,109,9],[149,0,109,9],[150,0,109,9],[151,0,109,9],[152,0,109,9],[152,6,109,2],[153,0,110,1],[155,0,112,7],[155,11,112,22,"fetchText"],[155,20,112,7],[155,21,112,32,"uri"],[155,24,112,7],[156,0,112,7],[157,0,112,7],[158,0,112,7],[159,0,112,7],[160,0,112,7],[161,0,112,7],[162,0,112,7],[162,46,113,25,"fetch"],[162,51,113,30],[162,52,113,31,"uri"],[162,55,113,30],[162,56,112,7],[164,0,112,7],[165,0,113,8,"response"],[165,12,113,8,"response"],[165,20,112,7],[166,0,112,7],[167,0,112,7],[167,46,114,15,"response"],[167,54,114,23],[167,55,114,24,"text"],[167,59,114,15],[167,61,112,7],[169,0,112,7],[170,0,112,7],[172,0,112,7],[173,0,112,7],[174,0,112,7],[175,0,112,7],[176,0,112,7],[177,0,112,7],[178,0,112,7],[180,0,117,7],[180,6,117,13,"err"],[180,9,117,16],[180,12,117,19,"console"],[180,19,117,26],[180,20,117,27,"error"],[180,25,117,19],[180,26,117,33,"bind"],[180,30,117,19],[180,31,117,38,"console"],[180,38,117,19],[180,39,117,7],[183,0,119,7],[183,11,119,16,"SvgUri"],[183,17,119,7],[183,18,119,23,"props"],[183,23,119,7],[183,25,119,40],[184,0,119,40],[184,8,120,10,"uri"],[184,11,119,40],[184,14,120,18,"props"],[184,19,119,40],[184,20,120,10,"uri"],[184,23,119,40],[186,0,119,40],[186,20,121,24],[186,41,121,48],[186,45,121,24],[186,46,119,40],[187,0,119,40],[188,0,119,40],[188,8,121,9,"xml"],[188,11,119,40],[189,0,119,40],[189,8,121,14,"setXml"],[189,14,119,40],[191,0,122,2],[191,26,122,12],[191,38,122,18],[192,0,123,4,"uri"],[192,6,123,4,"uri"],[192,9,123,7],[192,12,124,8,"fetchText"],[192,21,124,17],[192,22,124,18,"uri"],[192,25,124,17],[192,26,124,8],[192,27,125,11,"then"],[192,31,124,8],[192,32,125,16,"setXml"],[192,38,124,8],[192,40,126,11,"catch"],[192,45,124,8],[192,46,126,17,"err"],[192,49,124,8],[192,50,123,7],[192,53,127,8,"setXml"],[192,59,127,14],[192,60,127,15],[192,64,127,14],[192,65,123,4],[193,0,128,3],[193,5,122,2],[193,7,128,5],[193,8,128,6,"uri"],[193,11,128,5],[193,12,122,2],[194,0,129,2],[194,11,129,9],[194,40,129,10],[194,46,129,9],[195,0,129,17],[195,6,129,17],[195,9,129,20],[195,11,129,22,"xml"],[195,14,129,9],[196,0,129,27],[196,6,129,27],[196,14,129,35],[196,16,129,37,"props"],[196,21,129,9],[197,0,129,9],[198,0,129,9],[199,0,129,9],[200,0,129,9],[201,0,129,9],[202,0,129,9],[202,6,129,2],[203,0,130,1],[205,6,134,13,"SvgFromXml"],[205,16],[220,12,135,2,"state"],[220,17],[220,20,135,10],[221,0,135,12,"ast"],[221,8,135,12,"ast"],[221,11,135,15],[221,13,135,17],[222,0,135,10],[222,7],[228,42,136,22],[229,0,137,4],[229,13,137,9,"parse"],[229,18,137,4],[229,19,137,15],[229,24,137,20,"props"],[229,29,137,15],[229,30,137,26,"xml"],[229,33,137,4],[230,0,138,3],[233,41,139,21,"prevProps"],[233,50],[233,52,139,56],[234,0,139,56],[234,12,140,12,"xml"],[234,15,139,56],[234,18,140,20],[234,23,140,25,"props"],[234,28,139,56],[234,29,140,12,"xml"],[234,32,139,56],[236,0,141,4],[236,12,141,8,"xml"],[236,15,141,11],[236,20,141,16,"prevProps"],[236,29,141,25],[236,30,141,26,"xml"],[236,33,141,4],[236,35,141,31],[237,0,142,6],[237,15,142,11,"parse"],[237,20,142,6],[237,21,142,17,"xml"],[237,24,142,6],[238,0,143,5],[239,0,144,3],[242,28,145,8,"xml"],[242,31],[242,33,145,28],[243,0,146,4],[243,12,146,8],[244,0,147,6],[244,15,147,11,"setState"],[244,23,147,6],[244,24,147,20],[245,0,147,22,"ast"],[245,12,147,22,"ast"],[245,15,147,25],[245,17,147,27,"xml"],[245,20,147,30],[245,23,147,33,"parse"],[245,29,147,38],[245,30,147,39,"xml"],[245,33,147,38],[245,34,147,30],[245,37,147,46],[246,0,147,20],[246,11,147,6],[247,0,148,5],[247,9,146,4],[247,10,148,6],[247,17,148,13,"e"],[247,18,148,6],[247,20,148,16],[248,0,149,6,"console"],[248,10,149,6,"console"],[248,17,149,13],[248,18,149,14,"error"],[248,23,149,6],[248,24,149,20,"e"],[248,25,149,6],[249,0,150,5],[250,0,151,3],[253,31,152,11],[254,0,152,11],[254,12,154,6,"props"],[254,17,152,11],[254,20,156,8],[254,24,152,11],[254,25,154,6,"props"],[254,30,152,11],[255,0,152,11],[255,12,155,15,"ast"],[255,15,152,11],[255,18,156,8],[255,22,152,11],[255,23,155,6,"state"],[255,28,152,11],[255,29,155,15,"ast"],[255,32,152,11],[256,0,157,4],[256,15,157,11],[256,44,157,12],[256,50,157,11],[257,0,157,19],[257,10,157,19],[257,13,157,22],[257,15,157,24,"ast"],[257,18,157,11],[258,0,157,29],[258,10,157,29],[258,18,157,37],[258,20,157,39,"props"],[258,25,157,44],[258,26,157,45,"override"],[258,34,157,39],[258,38,157,57,"props"],[258,43,157,11],[259,0,157,11],[260,0,157,11],[261,0,157,11],[262,0,157,11],[263,0,157,11],[264,0,157,11],[264,10,157,4],[265,0,158,3],[268,4,134,32,"Component"],[268,20],[272,6,161,13,"SvgFromUri"],[272,16],[287,13,162,2,"state"],[287,18],[287,21,162,10],[288,0,162,12,"xml"],[288,8,162,12,"xml"],[288,11,162,15],[288,13,162,17],[289,0,162,10],[289,7],[295,42,163,22],[296,0,164,4],[296,13,164,9,"fetch"],[296,18,164,4],[296,19,164,15],[296,24,164,20,"props"],[296,29,164,15],[296,30,164,26,"uri"],[296,33,164,4],[297,0,165,3],[300,41,166,21,"prevProps"],[300,50],[300,52,166,56],[301,0,166,56],[301,12,167,12,"uri"],[301,15,166,56],[301,18,167,20],[301,23,167,25,"props"],[301,28,166,56],[301,29,167,12,"uri"],[301,32,166,56],[303,0,168,4],[303,12,168,8,"uri"],[303,15,168,11],[303,20,168,16,"prevProps"],[303,29,168,25],[303,30,168,26,"uri"],[303,33,168,4],[303,35,168,31],[304,0,169,6],[304,15,169,11,"fetch"],[304,20,169,6],[304,21,169,17,"uri"],[304,24,169,6],[305,0,170,5],[306,0,171,3],[309,28,172,14,"uri"],[309,31],[315,31,174,6],[315,35],[317,21,174,27,"uri"],[317,24],[323,50,174,39,"fetchText"],[323,59,174,48],[323,60,174,49,"uri"],[323,63,174,48],[323,64],[331,31,174,56],[331,35],[336,0,174,22,"xml"],[336,18,174,22,"xml"],[336,21],[339,29,174,11,"setState"],[339,37],[347,0,176,6,"console"],[347,16,176,6,"console"],[347,23,176,13],[347,24,176,14,"error"],[347,29,176,6],[358,31,179,11],[359,0,179,11],[359,12,181,6,"props"],[359,17,179,11],[359,20,183,8],[359,24,179,11],[359,25,181,6,"props"],[359,30,179,11],[360,0,179,11],[360,12,182,15,"xml"],[360,15,179,11],[360,18,183,8],[360,22,179,11],[360,23,182,6,"state"],[360,28,179,11],[360,29,182,15,"xml"],[360,32,179,11],[361,0,184,4],[361,15,184,11],[361,44,184,12],[361,54,184,11],[362,0,184,23],[362,10,184,23],[362,13,184,26],[362,15,184,28,"xml"],[362,18,184,11],[363,0,184,33],[363,10,184,33],[363,18,184,41],[363,20,184,43,"props"],[363,25,184,11],[364,0,184,11],[365,0,184,11],[366,0,184,11],[367,0,184,11],[368,0,184,11],[369,0,184,11],[369,10,184,4],[370,0,185,3],[373,4,161,32,"Component"],[373,20],[377,0,188,0],[377,6,188,6,"upperCase"],[377,15,188,15],[377,18,188,18],[377,27,188,6,"upperCase"],[377,36,188,18],[377,37,188,19,"_match"],[377,43,188,18],[377,45,188,35,"letter"],[377,51,188,18],[378,0,188,18],[378,11,188,54,"letter"],[378,17,188,60],[378,18,188,61,"toUpperCase"],[378,29,188,54],[378,31,188,18],[379,0,188,18],[379,3,188,0],[381,0,190,7],[381,6,190,13,"camelCase"],[381,15,190,22],[381,18,190,25],[381,27,190,13,"camelCase"],[381,36,190,25],[381,37,190,26,"phrase"],[381,43,190,25],[382,0,190,25],[382,11,191,2,"phrase"],[382,17,191,8],[382,18,191,9,"replace"],[382,25,191,2],[382,26,191,17],[382,40,191,2],[382,42,191,33,"upperCase"],[382,51,191,2],[382,52,190,25],[383,0,190,25],[383,3,190,7],[387,0,195,7],[387,11,195,16,"getStyle"],[387,19,195,7],[387,20,195,25,"string"],[387,26,195,7],[387,28,195,49],[388,0,196,2],[388,8,196,8,"style"],[388,13,196,21],[388,16,196,24],[388,18,196,2],[389,0,197,2],[389,8,197,8,"declarations"],[389,20,197,20],[389,23,197,23,"string"],[389,29,197,29],[389,30,197,30,"split"],[389,35,197,23],[389,36,197,36],[389,39,197,23],[389,40,197,2],[390,0,195,49],[390,8,198,10,"length"],[390,14,195,49],[390,17,198,21,"declarations"],[390,29,195,49],[390,30,198,10,"length"],[390,36,195,49],[392,0,199,2],[392,9,199,7],[392,13,199,11,"i"],[392,14,199,12],[392,17,199,15],[392,18,199,2],[392,20,199,18,"i"],[392,21,199,19],[392,24,199,22,"length"],[392,30,199,2],[392,32,199,30,"i"],[392,33,199,31],[392,35,199,2],[392,37,199,35],[393,0,200,4],[393,10,200,10,"declaration"],[393,21,200,21],[393,24,200,24,"declarations"],[393,36,200,36],[393,37,200,37,"i"],[393,38,200,36],[393,39,200,4],[395,0,201,4],[395,10,201,8,"declaration"],[395,21,201,19],[395,22,201,20,"length"],[395,28,201,8],[395,33,201,31],[395,34,201,4],[395,36,201,34],[396,0,202,6],[396,12,202,12,"split"],[396,17,202,17],[396,20,202,20,"declaration"],[396,31,202,31],[396,32,202,32,"split"],[396,37,202,20],[396,38,202,38],[396,41,202,20],[396,42,202,6],[397,0,203,6],[397,12,203,12,"property"],[397,21,203,20],[397,24,203,23,"split"],[397,29,203,28],[397,30,203,29],[397,31,203,28],[397,32,203,6],[398,0,204,6],[398,12,204,12,"value"],[398,17,204,17],[398,20,204,20,"split"],[398,25,204,25],[398,26,204,26],[398,27,204,25],[398,28,204,6],[399,0,205,6,"style"],[399,8,205,6,"style"],[399,13,205,11],[399,14,205,12,"camelCase"],[399,23,205,21],[399,24,205,22,"property"],[399,33,205,30],[399,34,205,31,"trim"],[399,38,205,22],[399,40,205,21],[399,41,205,11],[399,42,205,6],[399,45,205,42,"value"],[399,50,205,47],[399,51,205,48,"trim"],[399,55,205,42],[399,57,205,6],[400,0,206,5],[401,0,207,3],[403,0,208,2],[403,11,208,9,"style"],[403,16,208,2],[404,0,209,1],[406,0,211,7],[406,11,211,16,"astToReact"],[406,21,211,7],[406,22,212,2,"value"],[406,27,211,7],[406,29,213,2,"index"],[406,34,211,7],[406,36,214,24],[407,0,215,2],[407,8,215,6],[407,15,215,13,"value"],[407,20,215,6],[407,25,215,23],[407,33,215,2],[407,35,215,33],[408,0,215,33],[408,10,216,12,"Tag"],[408,13,215,33],[408,16,216,37,"value"],[408,21,215,33],[408,22,216,12,"Tag"],[408,25,215,33],[409,0,215,33],[409,10,216,17,"props"],[409,15,215,33],[409,18,216,37,"value"],[409,23,215,33],[409,24,216,17,"props"],[409,29,215,33],[410,0,215,33],[410,10,216,24,"children"],[410,18,215,33],[410,21,216,37,"value"],[410,26,215,33],[410,27,216,24,"children"],[410,35,215,33],[411,0,217,4],[411,13,218,6],[411,42,218,7],[411,45,218,6],[412,0,218,11],[412,8,218,11],[412,11,218,14],[412,13,218,16,"index"],[413,0,218,6],[413,9,218,27,"props"],[413,14,218,6],[414,0,218,6],[415,0,218,6],[416,0,218,6],[417,0,218,6],[418,0,218,6],[419,0,218,6],[419,10,219,10,"children"],[419,18,219,9],[419,19,219,40,"map"],[419,22,219,9],[419,23,219,44,"astToReact"],[419,33,219,9],[419,34,218,6],[419,35,217,4],[420,0,222,3],[422,0,223,2],[422,11,223,9,"value"],[422,16,223,2],[423,0,224,1],[425,0,228,0],[425,11,228,9,"repeat"],[425,17,228,0],[425,18,228,16,"str"],[425,21,228,0],[425,23,228,29,"i"],[425,24,228,0],[425,26,228,40],[426,0,229,2],[426,8,229,6,"result"],[426,14,229,12],[426,17,229,15],[426,19,229,2],[428,0,230,2],[428,11,230,9,"i"],[428,12,230,10],[428,14,230,2],[428,16,230,14],[429,0,231,4,"result"],[429,6,231,4,"result"],[429,12,231,10],[429,16,231,14,"str"],[429,19,231,4],[430,0,232,3],[432,0,233,2],[432,11,233,9,"result"],[432,17,233,2],[433,0,234,1],[435,0,236,0],[435,6,236,6,"toSpaces"],[435,14,236,14],[435,17,236,17],[435,26,236,6,"toSpaces"],[435,34,236,17],[435,35,236,18,"tabs"],[435,39,236,17],[436,0,236,17],[436,11,236,35,"repeat"],[436,17,236,41],[436,18,236,42],[436,22,236,41],[436,24,236,48,"tabs"],[436,28,236,52],[436,29,236,53,"length"],[436,35,236,41],[436,36,236,17],[437,0,236,17],[437,3,236,0],[439,0,238,0],[439,11,238,9,"locate"],[439,17,238,0],[439,18,238,16,"source"],[439,24,238,0],[439,26,238,32,"i"],[439,27,238,0],[439,29,238,43],[440,0,239,2],[440,8,239,8,"lines"],[440,13,239,13],[440,16,239,16,"source"],[440,22,239,22],[440,23,239,23,"split"],[440,28,239,16],[440,29,239,29],[440,33,239,16],[440,34,239,2],[441,0,240,2],[441,8,240,8,"nLines"],[441,14,240,14],[441,17,240,17,"lines"],[441,22,240,22],[441,23,240,23,"length"],[441,29,240,2],[442,0,241,2],[442,8,241,6,"column"],[442,14,241,12],[442,17,241,15,"i"],[442,18,241,2],[443,0,242,2],[443,8,242,6,"line"],[443,12,242,10],[443,15,242,13],[443,16,242,2],[445,0,243,2],[445,11,243,9,"line"],[445,15,243,13],[445,18,243,16,"nLines"],[445,24,243,2],[445,26,243,24,"line"],[445,30,243,28],[445,32,243,2],[445,34,243,32],[446,0,243,32],[446,10,244,12,"length"],[446,16,243,32],[446,19,244,23,"lines"],[446,24,244,28],[446,25,244,29,"line"],[446,29,244,28],[446,30,243,32],[446,31,244,12,"length"],[446,37,243,32],[448,0,245,4],[448,10,245,8,"column"],[448,16,245,14],[448,20,245,18,"length"],[448,26,245,4],[448,28,245,26],[449,0,246,6,"column"],[449,8,246,6,"column"],[449,14,246,12],[449,18,246,16,"length"],[449,24,246,6],[450,0,247,5],[450,7,245,4],[450,13,247,11],[451,0,248,6],[452,0,249,5],[453,0,250,3],[455,0,251,2],[455,8,251,8,"before"],[455,14,251,14],[455,17,251,17,"source"],[455,23,251,23],[455,24,251,24,"slice"],[455,29,251,17],[455,30,251,30],[455,31,251,17],[455,33,251,33,"i"],[455,34,251,17],[455,36,251,36,"replace"],[455,43,251,17],[455,44,251,44],[455,50,251,17],[455,52,251,52,"toSpaces"],[455,60,251,17],[455,61,251,2],[456,0,252,2],[456,8,252,8,"beforeExec"],[456,18,252,18],[456,21,252,21],[456,33,252,33,"exec"],[456,37,252,21],[456,38,252,38,"before"],[456,44,252,21],[456,45,252,2],[457,0,253,2],[457,8,253,8,"beforeLine"],[457,18,253,18],[457,21,253,22,"beforeExec"],[457,31,253,32],[457,35,253,36,"beforeExec"],[457,45,253,46],[457,46,253,47],[457,47,253,46],[457,48,253,21],[457,52,253,54],[457,54,253,2],[458,0,254,2],[458,8,254,8,"after"],[458,13,254,13],[458,16,254,16,"source"],[458,22,254,22],[458,23,254,23,"slice"],[458,28,254,16],[458,29,254,29,"i"],[458,30,254,16],[458,31,254,2],[459,0,255,2],[459,8,255,8,"afterExec"],[459,17,255,17],[459,20,255,20],[459,31,255,31,"exec"],[459,35,255,20],[459,36,255,36,"after"],[459,41,255,20],[459,42,255,2],[460,0,256,2],[460,8,256,8,"afterLine"],[460,17,256,17],[460,20,256,20,"afterExec"],[460,29,256,29],[460,33,256,33,"afterExec"],[460,42,256,42],[460,43,256,43],[460,44,256,42],[460,45,256,2],[461,0,257,2],[461,8,257,8,"pad"],[461,11,257,11],[461,14,257,14,"repeat"],[461,20,257,20],[461,21,257,21],[461,24,257,20],[461,26,257,26,"beforeLine"],[461,36,257,36],[461,37,257,37,"length"],[461,43,257,20],[461,44,257,2],[462,0,258,2],[462,8,258,8,"snippet"],[462,15,258,15],[462,23,258,21,"beforeLine"],[462,33,258,15],[462,36,258,34,"afterLine"],[462,45,258,15],[462,55,258,48,"pad"],[462,58,258,15],[462,64,258,2],[463,0,259,2],[463,11,259,9],[464,0,259,11,"line"],[464,6,259,11,"line"],[464,10,259,15],[464,12,259,11,"line"],[464,16,259,9],[465,0,259,17,"column"],[465,6,259,17,"column"],[465,12,259,23],[465,14,259,17,"column"],[465,20,259,9],[466,0,259,25,"snippet"],[466,6,259,25,"snippet"],[466,13,259,32],[466,15,259,25,"snippet"],[467,0,259,9],[467,5,259,2],[468,0,260,1],[470,0,262,0],[470,6,262,6,"validNameCharacters"],[470,25,262,25],[470,28,262,28],[470,44,262,0],[471,0,263,0],[471,6,263,6,"whitespace"],[471,16,263,16],[471,19,263,19],[471,31,263,0],[472,0,264,0],[472,6,264,6,"quotemarks"],[472,16,264,16],[472,19,264,19],[472,25,264,0],[474,0,268,7],[474,11,268,16,"parse"],[474,17,268,7],[474,18,268,22,"source"],[474,24,268,7],[474,26,268,38,"middleware"],[474,36,268,7],[474,38,268,78],[475,0,269,2],[475,8,269,8,"length"],[475,14,269,14],[475,17,269,17,"source"],[475,23,269,23],[475,24,269,24,"length"],[475,30,269,2],[476,0,270,2],[476,8,270,6,"currentElement"],[476,22,270,35],[476,25,270,38],[476,29,270,2],[477,0,271,2],[477,8,271,6,"state"],[477,13,271,11],[477,16,271,14,"metadata"],[477,24,271,2],[478,0,272,2],[478,8,272,6,"children"],[478,16,272,14],[478,19,272,17],[478,23,272,2],[479,0,273,2],[479,8,273,6,"root"],[479,12,273,2],[480,0,274,2],[480,8,274,6,"stack"],[480,13,274,21],[480,16,274,24],[480,18,274,2],[482,0,276,2],[482,13,276,11,"error"],[482,18,276,2],[482,19,276,17,"message"],[482,26,276,2],[482,28,276,34],[483,0,276,34],[483,20,277,38,"locate"],[483,26,277,44],[483,27,277,45,"source"],[483,33,277,44],[483,35,277,53,"i"],[483,36,277,44],[483,37,276,34],[484,0,276,34],[484,10,277,12,"line"],[484,14,276,34],[484,25,277,12,"line"],[484,29,276,34],[485,0,276,34],[485,10,277,18,"column"],[485,16,276,34],[485,27,277,18,"column"],[485,33,276,34],[486,0,276,34],[486,10,277,26,"snippet"],[486,17,276,34],[486,28,277,26,"snippet"],[486,35,276,34],[488,0,278,4],[488,12,278,10],[488,16,278,14,"Error"],[488,21,278,10],[488,22,279,9,"message"],[488,29,278,10],[488,39,279,21,"line"],[488,43,278,10],[488,52,279,29,"column"],[488,58,278,10],[488,137,279,109,"snippet"],[488,144,278,10],[488,145,278,4],[489,0,281,3],[491,0,283,2],[491,13,283,11,"metadata"],[491,21,283,2],[491,24,283,22],[492,0,284,4],[492,13,285,6,"i"],[492,14,285,7],[492,17,285,10],[492,18,285,6],[492,21,285,14,"length"],[492,27,285,6],[492,32,286,7,"source"],[492,38,286,13],[492,39,286,14,"i"],[492,40,286,13],[492,41,286,7],[492,46,286,21],[492,49,286,7],[492,53,286,28],[492,54,286,29,"validNameCharacters"],[492,73,286,48],[492,74,286,49,"test"],[492,78,286,29],[492,79,286,54,"source"],[492,85,286,60],[492,86,286,61,"i"],[492,87,286,62],[492,90,286,65],[492,91,286,60],[492,92,286,29],[492,93,285,6],[492,94,284,4],[492,96,287,6],[493,0,288,6,"i"],[493,8,288,6,"i"],[493,9,288,7],[494,0,289,5],[496,0,291,4],[496,13,291,11,"neutral"],[496,20,291,18],[496,22,291,4],[497,0,292,3],[499,0,294,2],[499,13,294,11,"neutral"],[499,20,294,2],[499,23,294,21],[500,0,295,4],[500,10,295,8,"text"],[500,14,295,12],[500,17,295,15],[500,19,295,4],[501,0,296,4],[501,10,296,8,"char"],[501,14,296,4],[503,0,297,4],[503,13,297,11,"i"],[503,14,297,12],[503,17,297,15,"length"],[503,23,297,11],[503,27,297,25],[503,28,297,26,"char"],[503,32,297,30],[503,35,297,33,"source"],[503,41,297,39],[503,42,297,40,"i"],[503,43,297,39],[503,44,297,25],[503,50,297,48],[503,53,297,4],[503,55,297,53],[504,0,298,6,"text"],[504,8,298,6,"text"],[504,12,298,10],[504,16,298,14,"char"],[504,20,298,6],[505,0,299,6,"i"],[505,8,299,6,"i"],[505,9,299,7],[505,13,299,11],[505,14,299,6],[506,0,300,5],[508,0,302,4],[508,10,302,8],[508,15,302,13,"test"],[508,19,302,8],[508,20,302,18,"text"],[508,24,302,8],[508,25,302,4],[508,27,302,25],[509,0,303,6,"children"],[509,8,303,6,"children"],[509,16,303,14],[509,17,303,15,"push"],[509,21,303,6],[509,22,303,20,"text"],[509,26,303,6],[510,0,304,5],[512,0,306,4],[512,10,306,8,"source"],[512,16,306,14],[512,17,306,15,"i"],[512,18,306,14],[512,19,306,8],[512,24,306,22],[512,27,306,4],[512,29,306,27],[513,0,307,6],[513,15,307,13,"openingTag"],[513,25,307,6],[514,0,308,5],[516,0,310,4],[516,13,310,11,"neutral"],[516,20,310,4],[517,0,311,3],[519,0,313,2],[519,13,313,11,"openingTag"],[519,23,313,2],[519,26,313,24],[520,0,314,4],[520,10,314,10,"char"],[520,14,314,14],[520,17,314,17,"source"],[520,23,314,23],[520,24,314,24,"i"],[520,25,314,23],[520,26,314,4],[522,0,316,4],[522,10,316,8,"char"],[522,14,316,12],[522,19,316,17],[522,22,316,4],[522,24,316,22],[523,0,317,6],[523,15,317,13,"neutral"],[523,22,317,6],[524,0,318,5],[526,0,320,4],[526,10,320,8,"char"],[526,14,320,12],[526,19,320,17],[526,22,320,4],[526,24,320,22],[527,0,321,6],[527,12,321,12,"start"],[527,17,321,17],[527,20,321,20,"i"],[527,21,321,21],[527,24,321,24],[527,25,321,6],[529,0,322,6],[529,12,322,10,"source"],[529,18,322,16],[529,19,322,17,"slice"],[529,24,322,10],[529,25,322,23,"start"],[529,30,322,10],[529,32,322,30,"i"],[529,33,322,31],[529,36,322,34],[529,37,322,10],[529,43,322,41],[529,47,322,6],[529,49,322,47],[530,0,323,8],[530,17,323,15,"comment"],[530,24,323,8],[531,0,324,7],[533,0,325,6],[533,12,325,12,"end"],[533,15,325,15],[533,18,325,18,"i"],[533,19,325,19],[533,22,325,22],[533,23,325,6],[535,0,326,6],[535,12,326,10,"source"],[535,18,326,16],[535,19,326,17,"slice"],[535,24,326,10],[535,25,326,23,"start"],[535,30,326,10],[535,32,326,30,"end"],[535,35,326,10],[535,41,326,39],[535,50,326,6],[535,52,326,50],[536,0,327,8],[536,17,327,15,"cdata"],[536,22,327,8],[537,0,328,7],[539,0,329,6],[539,12,329,10],[539,23,329,21,"test"],[539,27,329,10],[539,28,329,26,"source"],[539,34,329,32],[539,35,329,33,"slice"],[539,40,329,26],[539,41,329,39,"start"],[539,46,329,26],[539,48,329,46,"end"],[539,51,329,26],[539,52,329,10],[539,53,329,6],[539,55,329,53],[540,0,330,8],[540,17,330,15,"neutral"],[540,24,330,8],[541,0,331,7],[542,0,332,5],[544,0,334,4],[544,10,334,8,"char"],[544,14,334,12],[544,19,334,17],[544,22,334,4],[544,24,334,22],[545,0,335,6],[545,15,335,13,"closingTag"],[545,25,335,6],[546,0,336,5],[548,0,338,4],[548,10,338,10,"tag"],[548,13,338,13],[548,16,338,16,"getName"],[548,23,338,23],[548,25,338,4],[549,0,339,4],[549,10,339,10,"props"],[549,15,339,64],[549,18,339,67],[549,20,339,4],[550,0,340,4],[550,10,340,10,"element"],[550,17,340,25],[550,20,340,28],[551,0,341,6,"tag"],[551,8,341,6,"tag"],[551,11,341,9],[551,13,341,6,"tag"],[551,16,340,28],[552,0,342,6,"props"],[552,8,342,6,"props"],[552,13,342,11],[552,15,342,6,"props"],[552,20,340,28],[553,0,343,6,"children"],[553,8,343,6,"children"],[553,16,343,14],[553,18,343,16],[553,20,340,28],[554,0,344,6,"parent"],[554,8,344,6,"parent"],[554,14,344,12],[554,16,344,14,"currentElement"],[554,30,340,28],[555,0,345,6,"Tag"],[555,8,345,6,"Tag"],[555,11,345,9],[555,13,345,11,"tags"],[555,17,345,15],[555,18,345,16,"tag"],[555,21,345,15],[555,22,345,11],[555,26,345,24,"missingTag"],[556,0,340,28],[556,7,340,4],[558,0,348,4],[558,10,348,8,"currentElement"],[558,24,348,4],[558,26,348,24],[559,0,349,6,"children"],[559,8,349,6,"children"],[559,16,349,14],[559,17,349,15,"push"],[559,21,349,6],[559,22,349,20,"element"],[559,29,349,6],[560,0,350,5],[560,7,348,4],[560,13,350,11],[561,0,351,6,"root"],[561,8,351,6,"root"],[561,12,351,10],[561,15,351,13,"element"],[561,22,351,6],[562,0,352,5],[564,0,354,4,"getAttributes"],[564,6,354,4,"getAttributes"],[564,19,354,17],[564,20,354,18,"props"],[564,25,354,17],[564,26,354,4],[565,0,313,24],[565,10,356,12,"style"],[565,15,313,24],[565,18,356,22,"props"],[565,23,313,24],[565,24,356,12,"style"],[565,29,313,24],[567,0,357,4],[567,10,357,8],[567,17,357,15,"style"],[567,22,357,8],[567,27,357,25],[567,35,357,4],[567,37,357,35],[568,0,358,6,"element"],[568,8,358,6,"element"],[568,15,358,13],[568,16,358,14,"styles"],[568,22,358,6],[568,25,358,23,"style"],[568,30,358,6],[569,0,359,6,"props"],[569,8,359,6,"props"],[569,13,359,11],[569,14,359,12,"style"],[569,19,359,6],[569,22,359,20,"getStyle"],[569,30,359,28],[569,31,359,29,"style"],[569,36,359,28],[569,37,359,6],[570,0,360,5],[572,0,362,4],[572,10,362,8,"selfClosing"],[572,21,362,19],[572,24,362,22],[572,29,362,4],[574,0,364,4],[574,10,364,8,"source"],[574,16,364,14],[574,17,364,15,"i"],[574,18,364,14],[574,19,364,8],[574,24,364,22],[574,27,364,4],[574,29,364,27],[575,0,365,6,"i"],[575,8,365,6,"i"],[575,9,365,7],[575,13,365,11],[575,14,365,6],[576,0,366,6,"selfClosing"],[576,8,366,6,"selfClosing"],[576,19,366,17],[576,22,366,20],[576,26,366,6],[577,0,367,5],[579,0,369,4],[579,10,369,8,"source"],[579,16,369,14],[579,17,369,15,"i"],[579,18,369,14],[579,19,369,8],[579,24,369,22],[579,27,369,4],[579,29,369,27],[580,0,370,6,"error"],[580,8,370,6,"error"],[580,13,370,11],[580,14,370,12],[580,26,370,11],[580,27,370,6],[581,0,371,5],[583,0,373,4],[583,10,373,8],[583,11,373,9,"selfClosing"],[583,22,373,4],[583,24,373,22],[584,0,374,6,"currentElement"],[584,8,374,6,"currentElement"],[584,22,374,20],[584,25,374,23,"element"],[584,32,374,6],[585,0,375,9,"children"],[585,8,375,9,"children"],[585,16,373,22],[585,19,375,22,"element"],[585,26,373,22],[585,27,375,9,"children"],[585,35,373,22],[586,0,376,6,"stack"],[586,8,376,6,"stack"],[586,13,376,11],[586,14,376,12,"push"],[586,18,376,6],[586,19,376,17,"element"],[586,26,376,6],[587,0,377,5],[589,0,379,4],[589,13,379,11,"neutral"],[589,20,379,4],[590,0,380,3],[592,0,382,2],[592,13,382,11,"comment"],[592,20,382,2],[592,23,382,21],[593,0,383,4],[593,10,383,10,"index"],[593,15,383,15],[593,18,383,18,"source"],[593,24,383,24],[593,25,383,25,"indexOf"],[593,32,383,18],[593,33,383,33],[593,38,383,18],[593,40,383,40,"i"],[593,41,383,18],[593,42,383,4],[595,0,384,4],[595,10,384,8],[595,11,384,9],[595,12,384,10,"index"],[595,17,384,4],[595,19,384,17],[596,0,385,6,"error"],[596,8,385,6,"error"],[596,13,385,11],[596,14,385,12],[596,28,385,11],[596,29,385,6],[597,0,386,5],[599,0,388,4,"i"],[599,6,388,4,"i"],[599,7,388,5],[599,10,388,8,"index"],[599,15,388,13],[599,18,388,16],[599,19,388,4],[600,0,389,4],[600,13,389,11,"neutral"],[600,20,389,4],[601,0,390,3],[603,0,392,2],[603,13,392,11,"cdata"],[603,18,392,2],[603,21,392,19],[604,0,393,4],[604,10,393,10,"index"],[604,15,393,15],[604,18,393,18,"source"],[604,24,393,24],[604,25,393,25,"indexOf"],[604,32,393,18],[604,33,393,33],[604,38,393,18],[604,40,393,40,"i"],[604,41,393,18],[604,42,393,4],[606,0,394,4],[606,10,394,8],[606,11,394,9],[606,12,394,10,"index"],[606,17,394,4],[606,19,394,17],[607,0,395,6,"error"],[607,8,395,6,"error"],[607,13,395,11],[607,14,395,12],[607,28,395,11],[607,29,395,6],[608,0,396,5],[610,0,398,4,"children"],[610,6,398,4,"children"],[610,14,398,12],[610,15,398,13,"push"],[610,19,398,4],[610,20,398,18,"source"],[610,26,398,24],[610,27,398,25,"slice"],[610,32,398,18],[610,33,398,31,"i"],[610,34,398,32],[610,37,398,35],[610,38,398,18],[610,40,398,38,"index"],[610,45,398,18],[610,46,398,4],[611,0,400,4,"i"],[611,6,400,4,"i"],[611,7,400,5],[611,10,400,8,"index"],[611,15,400,13],[611,18,400,16],[611,19,400,4],[612,0,401,4],[612,13,401,11,"neutral"],[612,20,401,4],[613,0,402,3],[615,0,404,2],[615,13,404,11,"closingTag"],[615,23,404,2],[615,26,404,24],[616,0,405,4],[616,10,405,10,"tag"],[616,13,405,13],[616,16,405,16,"getName"],[616,23,405,23],[616,25,405,4],[618,0,407,4],[618,10,407,8],[618,11,407,9,"tag"],[618,14,407,4],[618,16,407,14],[619,0,408,6,"error"],[619,8,408,6,"error"],[619,13,408,11],[619,14,408,12],[619,33,408,11],[619,34,408,6],[620,0,409,5],[622,0,411,4],[622,10,411,8,"currentElement"],[622,24,411,22],[622,28,411,26,"tag"],[622,31,411,29],[622,36,411,34,"currentElement"],[622,50,411,48],[622,51,411,49,"tag"],[622,54,411,4],[622,56,411,54],[623,0,412,6,"error"],[623,8,412,6,"error"],[623,13,412,11],[623,42,413,34,"tag"],[623,45,412,11],[623,77,413,64,"currentElement"],[623,91,413,78],[623,92,413,79,"tag"],[623,95,412,11],[623,102,412,6],[624,0,415,5],[626,0,417,4],[626,10,417,8,"source"],[626,16,417,14],[626,17,417,15,"i"],[626,18,417,14],[626,19,417,8],[626,24,417,22],[626,27,417,4],[626,29,417,27],[627,0,418,6,"error"],[627,8,418,6,"error"],[627,13,418,11],[627,14,418,12],[627,26,418,11],[627,27,418,6],[628,0,419,5],[630,0,421,4,"stack"],[630,6,421,4,"stack"],[630,11,421,9],[630,12,421,10,"pop"],[630,15,421,4],[631,0,422,4,"currentElement"],[631,6,422,4,"currentElement"],[631,20,422,18],[631,23,422,21,"stack"],[631,28,422,26],[631,29,422,27,"stack"],[631,34,422,32],[631,35,422,33,"length"],[631,41,422,27],[631,44,422,42],[631,45,422,26],[631,46,422,4],[633,0,423,4],[633,10,423,8,"currentElement"],[633,24,423,4],[633,26,423,24],[634,0,423,24],[634,30,424,22,"currentElement"],[634,44,423,24],[635,0,424,9,"children"],[635,8,424,9,"children"],[635,16,423,24],[635,35,424,9,"children"],[635,43,423,24],[636,0,425,5],[638,0,427,4],[638,13,427,11,"neutral"],[638,20,427,4],[639,0,428,3],[641,0,430,2],[641,13,430,11,"getName"],[641,20,430,2],[641,23,430,21],[642,0,431,4],[642,10,431,8,"name"],[642,14,431,12],[642,17,431,15],[642,19,431,4],[643,0,432,4],[643,10,432,8,"char"],[643,14,432,4],[645,0,433,4],[645,13,433,11,"i"],[645,14,433,12],[645,17,433,15,"length"],[645,23,433,11],[645,27,433,25,"validNameCharacters"],[645,46,433,44],[645,47,433,45,"test"],[645,51,433,25],[645,52,433,51,"char"],[645,56,433,55],[645,59,433,58,"source"],[645,65,433,64],[645,66,433,65,"i"],[645,67,433,64],[645,68,433,25],[645,69,433,4],[645,71,433,71],[646,0,434,6,"name"],[646,8,434,6,"name"],[646,12,434,10],[646,16,434,14,"char"],[646,20,434,6],[647,0,435,6,"i"],[647,8,435,6,"i"],[647,9,435,7],[647,13,435,11],[647,14,435,6],[648,0,436,5],[650,0,438,4],[650,13,438,11,"name"],[650,17,438,4],[651,0,439,3],[653,0,441,2],[653,13,441,11,"getAttributes"],[653,26,441,2],[653,27,441,25,"props"],[653,32,441,2],[653,34,444,5],[654,0,445,4],[654,13,445,11,"i"],[654,14,445,12],[654,17,445,15,"length"],[654,23,445,4],[654,25,445,23],[655,0,446,6],[655,12,446,10],[655,13,446,11,"whitespace"],[655,23,446,21],[655,24,446,22,"test"],[655,28,446,11],[655,29,446,27,"source"],[655,35,446,33],[655,36,446,34,"i"],[655,37,446,33],[655,38,446,11],[655,39,446,6],[655,41,446,39],[656,0,447,8],[657,0,448,7],[659,0,449,6,"allowSpaces"],[659,8,449,6,"allowSpaces"],[659,19,449,17],[660,0,451,6],[660,12,451,12,"name"],[660,16,451,16],[660,19,451,19,"getName"],[660,26,451,26],[660,28,451,6],[662,0,452,6],[662,12,452,10],[662,13,452,11,"name"],[662,17,452,6],[662,19,452,17],[663,0,453,8],[664,0,454,7],[666,0,456,6],[666,12,456,10,"value"],[666,17,456,42],[666,20,456,45],[666,24,456,6],[667,0,458,6,"allowSpaces"],[667,8,458,6,"allowSpaces"],[667,19,458,17],[669,0,459,6],[669,12,459,10,"source"],[669,18,459,16],[669,19,459,17,"i"],[669,20,459,16],[669,21,459,10],[669,26,459,24],[669,29,459,6],[669,31,459,29],[670,0,460,8,"i"],[670,10,460,8,"i"],[670,11,460,9],[670,15,460,13],[670,16,460,8],[671,0,461,8,"allowSpaces"],[671,10,461,8,"allowSpaces"],[671,21,461,19],[672,0,463,8,"value"],[672,10,463,8,"value"],[672,15,463,13],[672,18,463,16,"getAttributeValue"],[672,35,463,33],[672,37,463,8],[674,0,464,8],[674,14,464,12],[674,15,464,13,"isNaN"],[674,20,464,18],[674,21,464,19],[674,22,464,20,"value"],[674,27,464,18],[674,28,464,12],[674,32,464,30,"value"],[674,37,464,35],[674,38,464,36,"trim"],[674,42,464,30],[674,49,464,47],[674,51,464,8],[674,53,464,51],[675,0,465,10,"value"],[675,12,465,10,"value"],[675,17,465,15],[675,20,465,18],[675,21,465,19,"value"],[675,26,465,10],[676,0,466,9],[677,0,467,7],[679,0,469,6,"props"],[679,8,469,6,"props"],[679,13,469,11],[679,14,469,12,"camelCase"],[679,23,469,21],[679,24,469,22,"name"],[679,28,469,21],[679,29,469,11],[679,30,469,6],[679,33,469,31,"value"],[679,38,469,6],[680,0,470,5],[681,0,471,3],[683,0,473,2],[683,13,473,11,"getAttributeValue"],[683,30,473,2],[683,33,473,39],[684,0,474,4],[684,13,474,11,"quotemarks"],[684,23,474,21],[684,24,474,22,"test"],[684,28,474,11],[684,29,474,27,"source"],[684,35,474,33],[684,36,474,34,"i"],[684,37,474,33],[684,38,474,11],[684,42,475,8,"getQuotedAttributeValue"],[684,65,475,31],[684,67,474,11],[684,70,476,8,"getUnquotedAttributeValue"],[684,95,476,33],[684,97,474,4],[685,0,477,3],[687,0,479,2],[687,13,479,11,"getUnquotedAttributeValue"],[687,38,479,2],[687,41,479,39],[688,0,480,4],[688,10,480,8,"value"],[688,15,480,13],[688,18,480,16],[688,20,480,4],[690,0,481,4],[690,9,481,7],[691,0,482,6],[691,12,482,12,"char"],[691,16,482,16],[691,19,482,19,"source"],[691,25,482,25],[691,26,482,26,"i"],[691,27,482,25],[691,28,482,6],[693,0,483,6],[693,12,483,10,"char"],[693,16,483,14],[693,21,483,19],[693,24,483,10],[693,28,483,26,"char"],[693,32,483,30],[693,37,483,35],[693,40,483,10],[693,44,483,42,"char"],[693,48,483,46],[693,53,483,51],[693,56,483,6],[693,58,483,56],[694,0,484,8],[694,17,484,15,"value"],[694,22,484,8],[695,0,485,7],[697,0,487,6,"value"],[697,8,487,6,"value"],[697,13,487,11],[697,17,487,15,"char"],[697,21,487,6],[698,0,488,6,"i"],[698,8,488,6,"i"],[698,9,488,7],[698,13,488,11],[698,14,488,6],[699,0,489,5],[699,7,481,4],[699,15,489,13,"i"],[699,16,489,14],[699,19,489,17,"length"],[699,25,481,4],[701,0,491,4],[701,13,491,11,"value"],[701,18,491,4],[702,0,492,3],[704,0,494,2],[704,13,494,11,"getQuotedAttributeValue"],[704,36,494,2],[704,39,494,37],[705,0,495,4],[705,10,495,10,"quotemark"],[705,19,495,19],[705,22,495,22,"source"],[705,28,495,28],[705,29,495,29,"i"],[705,30,495,30],[705,32,495,28],[705,33,495,4],[706,0,497,4],[706,10,497,8,"value"],[706,15,497,13],[706,18,497,16],[706,20,497,4],[707,0,498,4],[707,10,498,8,"escaped"],[707,17,498,15],[707,20,498,18],[707,25,498,4],[709,0,500,4],[709,13,500,11,"i"],[709,14,500,12],[709,17,500,15,"length"],[709,23,500,4],[709,25,500,23],[710,0,501,6],[710,12,501,12,"char"],[710,16,501,16],[710,19,501,19,"source"],[710,25,501,25],[710,26,501,26,"i"],[710,27,501,27],[710,29,501,25],[710,30,501,6],[712,0,502,6],[712,12,502,10,"char"],[712,16,502,14],[712,21,502,19,"quotemark"],[712,30,502,10],[712,34,502,32],[712,35,502,33,"escaped"],[712,42,502,6],[712,44,502,42],[713,0,503,8],[713,17,503,15,"value"],[713,22,503,8],[714,0,504,7],[716,0,506,6],[716,12,506,10,"char"],[716,16,506,14],[716,21,506,19],[716,25,506,10],[716,29,506,27],[716,30,506,28,"escaped"],[716,37,506,6],[716,39,506,37],[717,0,507,8,"escaped"],[717,10,507,8,"escaped"],[717,17,507,15],[717,20,507,18],[717,24,507,8],[718,0,508,7],[720,0,510,6,"value"],[720,8,510,6,"value"],[720,13,510,11],[720,17,510,15,"escaped"],[720,24,510,22],[720,34,510,30,"char"],[720,38,510,22],[720,41,510,39,"char"],[720,45,510,6],[721,0,511,6,"escaped"],[721,8,511,6,"escaped"],[721,15,511,13],[721,18,511,16],[721,23,511,6],[722,0,512,5],[724,0,514,4],[724,13,514,11,"value"],[724,18,514,4],[725,0,515,3],[727,0,517,2],[727,13,517,11,"allowSpaces"],[727,24,517,2],[727,27,517,25],[728,0,518,4],[728,13,518,11,"i"],[728,14,518,12],[728,17,518,15,"length"],[728,23,518,11],[728,27,518,25,"whitespace"],[728,37,518,35],[728,38,518,36,"test"],[728,42,518,25],[728,43,518,41,"source"],[728,49,518,47],[728,50,518,48,"i"],[728,51,518,47],[728,52,518,25],[728,53,518,4],[728,55,518,53],[729,0,519,6,"i"],[729,8,519,6,"i"],[729,9,519,7],[729,13,519,11],[729,14,519,6],[730,0,520,5],[731,0,521,3],[733,0,523,2],[733,8,523,6,"i"],[733,9,523,7],[733,12,523,10],[733,13,523,2],[735,0,524,2],[735,11,524,9,"i"],[735,12,524,10],[735,15,524,13,"length"],[735,21,524,2],[735,23,524,21],[736,0,525,4],[736,10,525,8],[736,11,525,9,"state"],[736,16,525,4],[736,18,525,16],[737,0,526,6,"error"],[737,8,526,6,"error"],[737,13,526,11],[737,14,526,12],[737,36,526,11],[737,37,526,6],[738,0,527,5],[740,0,528,4,"state"],[740,6,528,4,"state"],[740,11,528,9],[740,14,528,12,"state"],[740,19,528,17],[740,21,528,4],[741,0,529,4,"i"],[741,6,529,4,"i"],[741,7,529,5],[741,11,529,9],[741,12,529,4],[742,0,530,3],[744,0,532,2],[744,8,532,6,"state"],[744,13,532,11],[744,18,532,16,"neutral"],[744,25,532,2],[744,27,532,25],[745,0,533,4,"error"],[745,6,533,4,"error"],[745,11,533,9],[745,12,533,10],[745,37,533,9],[745,38,533,4],[746,0,534,3],[748,0,536,2],[748,8,536,6,"root"],[748,12,536,2],[748,14,536,12],[749,0,537,4],[749,10,537,10,"xml"],[749,13,537,21],[749,16,537,24],[749,17,537,25,"middleware"],[749,27,537,35],[749,30,537,38,"middleware"],[749,40,537,48],[749,41,537,49,"root"],[749,45,537,48],[749,46,537,35],[749,49,537,57,"root"],[749,53,537,24],[749,58,537,66,"root"],[749,62,537,4],[751,0,538,4],[751,10,538,10,"ast"],[751,14,538,39],[751,17,538,42,"xml"],[751,20,538,45],[751,21,538,46,"children"],[751,29,538,42],[751,30,538,55,"map"],[751,33,538,42],[751,34,538,59,"astToReact"],[751,44,538,42],[751,45,538,4],[753,0,539,4],[753,10,539,10,"jsx"],[753,13,539,21],[753,16,539,24,"xml"],[753,19,539,4],[754,0,540,4,"jsx"],[754,6,540,4,"jsx"],[754,9,540,7],[754,10,540,8,"children"],[754,18,540,4],[754,21,540,19,"ast"],[754,25,540,4],[755,0,541,4],[755,13,541,11,"jsx"],[755,16,541,4],[756,0,542,3],[758,0,544,2],[758,11,544,9],[758,15,544,2],[759,0,545,1]],"functionMap":{"names":["<global>","missingTag","SvgAst","SvgXml","useMemo$argument_0","fetchText","SvgUri","useEffect$argument_0","SvgFromXml","SvgFromXml#componentDidMount","SvgFromXml#componentDidUpdate","SvgFromXml#parse","SvgFromXml#render","SvgFromUri","SvgFromUri#componentDidMount","SvgFromUri#componentDidUpdate","SvgFromUri#fetch","SvgFromUri#render","upperCase","camelCase","getStyle","astToReact","repeat","toSpaces","locate","parse","error","metadata","neutral","openingTag","comment","cdata","closingTag","getName","getAttributes","getAttributeValue","getUnquotedAttributeValue","getQuotedAttributeValue","allowSpaces"],"mappings":"AAA;ACyD;CDE;OEgC;CFU;OGE;qCCE,wCD;CHI;OKE;CLG;OMI;YCG;GDM;CNE;OQI;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CRC;OaE;ECE;GDE;EEC;GFK;EGC;GHM;EIC;GJM;CbC;kBkBE,wDlB;yBmBE;2CnBC;OoBI;CpBc;OqBE;CrBa;AsBI;CtBM;iBuBE,2CvB;AwBE;CxBsB;OyBQ;ECQ;GDK;EEE;GFS;EGE;GHiB;EIE;GJmE;EKE;GLQ;EME;GNU;EOE;GPwB;EQE;GRS;ESE;GT8B;EUE;GVI;EWE;GXa;EYE;GZqB;EaE;GbI;CzBwB"}},"type":"js/module"}]}