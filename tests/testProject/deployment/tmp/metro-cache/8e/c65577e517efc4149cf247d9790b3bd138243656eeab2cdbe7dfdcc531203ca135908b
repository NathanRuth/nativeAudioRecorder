{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.setTSpan = setTSpan;\n  exports.default = extractText;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var _util = _$$_REQUIRE(_dependencyMap[5], \"../util\");\n\n  var _jsxFileName = \"C:\\\\Program Files\\\\Mendix\\\\8.17.0.11170\\\\modeler\\\\tools\\\\node\\\\node_modules\\\\react-native-svg\\\\src\\\\lib\\\\extract\\\\extractText.tsx\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?(?:%|px|em|pt|pc|mm|cm|in]))*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      cachedFontObjectsFromString[font] = null;\n      return null;\n    }\n\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    cachedFontObjectsFromString[font] = {\n      fontSize: match[2] || 12,\n      fontWeight: isBold ? 'bold' : 'normal',\n      fontStyle: isItalic ? 'italic' : 'normal',\n      fontFamily: extractSingleFontFamily(match[3])\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(props) {\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontFeatureSettings = props.fontFeatureSettings,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontVariationSettings = props.fontVariationSettings,\n        font = props.font;\n    var ownedFont = (0, _util.pickNotNil)({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: extractSingleFontFamily(fontFamily),\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontFeatureSettings: fontFeatureSettings,\n      fontVariantLigatures: fontVariantLigatures,\n      fontVariationSettings: fontVariationSettings\n    });\n    var baseFont = typeof font === 'string' ? parseFontString(font) : font;\n    return _objectSpread(_objectSpread({}, baseFont), ownedFont);\n  }\n\n  var TSpan;\n\n  function setTSpan(TSpanImplementation) {\n    TSpan = TSpanImplementation;\n  }\n\n  function getChild(child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(TSpan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }\n      }, String(child));\n    } else {\n      return child;\n    }\n  }\n\n  function extractText(props, container) {\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        children = props.children,\n        inlineSize = props.inlineSize,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;\n    return {\n      content: textChildren === null ? String(children) : null,\n      children: textChildren,\n      inlineSize: inlineSize,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","lineCount":151,"map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[27,0,6,0],[27,6,6,6,"fontRegExp"],[27,16,6,16],[27,19,6,19],[27,134,6,0],[28,0,7,0],[28,6,7,6,"fontFamilyPrefix"],[28,22,7,22],[28,25,7,25],[28,35,7,0],[29,0,8,0],[29,6,8,6,"fontFamilySuffix"],[29,22,8,22],[29,25,8,25],[29,35,8,0],[30,0,9,0],[30,6,9,6,"commaReg"],[30,14,9,14],[30,17,9,17],[30,27,9,0],[31,0,11,0],[31,6,11,6,"cachedFontObjectsFromString"],[31,33,18,1],[31,36,18,4],[31,38,11,0],[33,0,20,0],[33,11,20,9,"extractSingleFontFamily"],[33,34,20,0],[33,35,20,33,"fontFamilyString"],[33,51,20,0],[33,53,20,60],[34,0,24,2],[34,11,24,9,"fontFamilyString"],[34,27,24,25],[34,30,25,6,"fontFamilyString"],[34,46,25,22],[34,47,26,9,"split"],[34,52,25,6],[34,53,26,15,"commaReg"],[34,61,25,6],[34,63,26,25],[34,64,25,6],[34,66,27,9,"replace"],[34,73,25,6],[34,74,27,17,"fontFamilyPrefix"],[34,90,25,6],[34,92,27,35],[34,94,25,6],[34,96,28,9,"replace"],[34,103,25,6],[34,104,28,17,"fontFamilySuffix"],[34,120,25,6],[34,122,28,35],[34,124,25,6],[34,125,24,25],[34,128,29,6],[34,132,24,2],[35,0,30,1],[37,0,32,0],[37,11,32,9,"parseFontString"],[37,26,32,0],[37,27,32,25,"font"],[37,31,32,0],[37,33,32,39],[38,0,33,2],[38,8,33,6,"cachedFontObjectsFromString"],[38,35,33,33],[38,36,33,34,"hasOwnProperty"],[38,50,33,6],[38,51,33,49,"font"],[38,55,33,6],[38,56,33,2],[38,58,33,56],[39,0,34,4],[39,13,34,11,"cachedFontObjectsFromString"],[39,40,34,38],[39,41,34,39,"font"],[39,45,34,38],[39,46,34,4],[40,0,35,3],[42,0,36,2],[42,8,36,8,"match"],[42,13,36,13],[42,16,36,16,"fontRegExp"],[42,26,36,26],[42,27,36,27,"exec"],[42,31,36,16],[42,32,36,32,"font"],[42,36,36,16],[42,37,36,2],[44,0,37,2],[44,8,37,6],[44,9,37,7,"match"],[44,14,37,2],[44,16,37,14],[45,0,38,4,"cachedFontObjectsFromString"],[45,6,38,4,"cachedFontObjectsFromString"],[45,33,38,31],[45,34,38,32,"font"],[45,38,38,31],[45,39,38,4],[45,42,38,40],[45,46,38,4],[46,0,39,4],[46,13,39,11],[46,17,39,4],[47,0,40,3],[49,0,41,2],[49,8,41,8,"isBold"],[49,14,41,14],[49,17,41,17],[49,24,41,24,"exec"],[49,28,41,17],[49,29,41,29,"match"],[49,34,41,34],[49,35,41,35],[49,36,41,34],[49,37,41,17],[49,38,41,2],[50,0,42,2],[50,8,42,8,"isItalic"],[50,16,42,16],[50,19,42,19],[50,28,42,28,"exec"],[50,32,42,19],[50,33,42,33,"match"],[50,38,42,38],[50,39,42,39],[50,40,42,38],[50,41,42,19],[50,42,42,2],[51,0,43,2,"cachedFontObjectsFromString"],[51,4,43,2,"cachedFontObjectsFromString"],[51,31,43,29],[51,32,43,30,"font"],[51,36,43,29],[51,37,43,2],[51,40,43,38],[52,0,44,4,"fontSize"],[52,6,44,4,"fontSize"],[52,14,44,12],[52,16,44,14,"match"],[52,21,44,19],[52,22,44,20],[52,23,44,19],[52,24,44,14],[52,28,44,26],[52,30,43,38],[53,0,45,4,"fontWeight"],[53,6,45,4,"fontWeight"],[53,16,45,14],[53,18,45,16,"isBold"],[53,24,45,22],[53,27,45,25],[53,33,45,22],[53,36,45,34],[53,44,43,38],[54,0,46,4,"fontStyle"],[54,6,46,4,"fontStyle"],[54,15,46,13],[54,17,46,15,"isItalic"],[54,25,46,23],[54,28,46,26],[54,36,46,23],[54,39,46,37],[54,47,43,38],[55,0,47,4,"fontFamily"],[55,6,47,4,"fontFamily"],[55,16,47,14],[55,18,47,16,"extractSingleFontFamily"],[55,41,47,39],[55,42,47,40,"match"],[55,47,47,45],[55,48,47,46],[55,49,47,45],[55,50,47,39],[56,0,43,38],[56,5,43,2],[57,0,49,2],[57,11,49,9,"cachedFontObjectsFromString"],[57,38,49,36],[57,39,49,37,"font"],[57,43,49,36],[57,44,49,2],[58,0,50,1],[60,0,71,7],[60,11,71,16,"extractFont"],[60,22,71,7],[60,23,71,28,"props"],[60,28,71,7],[60,30,71,46],[61,0,71,46],[61,8,73,4,"fontData"],[61,16,71,46],[61,19,89,6,"props"],[61,24,71,46],[61,25,73,4,"fontData"],[61,33,71,46],[62,0,71,46],[62,8,74,4,"fontStyle"],[62,17,71,46],[62,20,89,6,"props"],[62,25,71,46],[62,26,74,4,"fontStyle"],[62,35,71,46],[63,0,71,46],[63,8,75,4,"fontVariant"],[63,19,71,46],[63,22,89,6,"props"],[63,27,71,46],[63,28,75,4,"fontVariant"],[63,39,71,46],[64,0,71,46],[64,8,76,4,"fontWeight"],[64,18,71,46],[64,21,89,6,"props"],[64,26,71,46],[64,27,76,4,"fontWeight"],[64,37,71,46],[65,0,71,46],[65,8,77,4,"fontStretch"],[65,19,71,46],[65,22,89,6,"props"],[65,27,71,46],[65,28,77,4,"fontStretch"],[65,39,71,46],[66,0,71,46],[66,8,78,4,"fontSize"],[66,16,71,46],[66,19,89,6,"props"],[66,24,71,46],[66,25,78,4,"fontSize"],[66,33,71,46],[67,0,71,46],[67,8,79,4,"fontFamily"],[67,18,71,46],[67,21,89,6,"props"],[67,26,71,46],[67,27,79,4,"fontFamily"],[67,37,71,46],[68,0,71,46],[68,8,80,4,"textAnchor"],[68,18,71,46],[68,21,89,6,"props"],[68,26,71,46],[68,27,80,4,"textAnchor"],[68,37,71,46],[69,0,71,46],[69,8,81,4,"textDecoration"],[69,22,71,46],[69,25,89,6,"props"],[69,30,71,46],[69,31,81,4,"textDecoration"],[69,45,71,46],[70,0,71,46],[70,8,82,4,"letterSpacing"],[70,21,71,46],[70,24,89,6,"props"],[70,29,71,46],[70,30,82,4,"letterSpacing"],[70,43,71,46],[71,0,71,46],[71,8,83,4,"wordSpacing"],[71,19,71,46],[71,22,89,6,"props"],[71,27,71,46],[71,28,83,4,"wordSpacing"],[71,39,71,46],[72,0,71,46],[72,8,84,4,"kerning"],[72,15,71,46],[72,18,89,6,"props"],[72,23,71,46],[72,24,84,4,"kerning"],[72,31,71,46],[73,0,71,46],[73,8,85,4,"fontFeatureSettings"],[73,27,71,46],[73,30,89,6,"props"],[73,35,71,46],[73,36,85,4,"fontFeatureSettings"],[73,55,71,46],[74,0,71,46],[74,8,86,4,"fontVariantLigatures"],[74,28,71,46],[74,31,89,6,"props"],[74,36,71,46],[74,37,86,4,"fontVariantLigatures"],[74,57,71,46],[75,0,71,46],[75,8,87,4,"fontVariationSettings"],[75,29,71,46],[75,32,89,6,"props"],[75,37,71,46],[75,38,87,4,"fontVariationSettings"],[75,59,71,46],[76,0,71,46],[76,8,88,4,"font"],[76,12,71,46],[76,15,89,6,"props"],[76,20,71,46],[76,21,88,4,"font"],[76,25,71,46],[77,0,91,2],[77,8,91,8,"ownedFont"],[77,17,91,17],[77,20,91,20],[77,42,91,31],[78,0,92,4,"fontData"],[78,6,92,4,"fontData"],[78,14,92,12],[78,16,92,4,"fontData"],[78,24,91,31],[79,0,93,4,"fontStyle"],[79,6,93,4,"fontStyle"],[79,15,93,13],[79,17,93,4,"fontStyle"],[79,26,91,31],[80,0,94,4,"fontVariant"],[80,6,94,4,"fontVariant"],[80,17,94,15],[80,19,94,4,"fontVariant"],[80,30,91,31],[81,0,95,4,"fontWeight"],[81,6,95,4,"fontWeight"],[81,16,95,14],[81,18,95,4,"fontWeight"],[81,28,91,31],[82,0,96,4,"fontStretch"],[82,6,96,4,"fontStretch"],[82,17,96,15],[82,19,96,4,"fontStretch"],[82,30,91,31],[83,0,97,4,"fontSize"],[83,6,97,4,"fontSize"],[83,14,97,12],[83,16,97,4,"fontSize"],[83,24,91,31],[84,0,98,4,"fontFamily"],[84,6,98,4,"fontFamily"],[84,16,98,14],[84,18,98,16,"extractSingleFontFamily"],[84,41,98,39],[84,42,98,40,"fontFamily"],[84,52,98,39],[84,53,91,31],[85,0,99,4,"textAnchor"],[85,6,99,4,"textAnchor"],[85,16,99,14],[85,18,99,4,"textAnchor"],[85,28,91,31],[86,0,100,4,"textDecoration"],[86,6,100,4,"textDecoration"],[86,20,100,18],[86,22,100,4,"textDecoration"],[86,36,91,31],[87,0,101,4,"letterSpacing"],[87,6,101,4,"letterSpacing"],[87,19,101,17],[87,21,101,4,"letterSpacing"],[87,34,91,31],[88,0,102,4,"wordSpacing"],[88,6,102,4,"wordSpacing"],[88,17,102,15],[88,19,102,4,"wordSpacing"],[88,30,91,31],[89,0,103,4,"kerning"],[89,6,103,4,"kerning"],[89,13,103,11],[89,15,103,4,"kerning"],[89,22,91,31],[90,0,104,4,"fontFeatureSettings"],[90,6,104,4,"fontFeatureSettings"],[90,25,104,23],[90,27,104,4,"fontFeatureSettings"],[90,46,91,31],[91,0,105,4,"fontVariantLigatures"],[91,6,105,4,"fontVariantLigatures"],[91,26,105,24],[91,28,105,4,"fontVariantLigatures"],[91,48,91,31],[92,0,106,4,"fontVariationSettings"],[92,6,106,4,"fontVariationSettings"],[92,27,106,25],[92,29,106,4,"fontVariationSettings"],[93,0,91,31],[93,5,91,20],[93,6,91,2],[94,0,109,2],[94,8,109,8,"baseFont"],[94,16,109,16],[94,19,109,19],[94,26,109,26,"font"],[94,30,109,19],[94,35,109,35],[94,43,109,19],[94,46,109,46,"parseFontString"],[94,61,109,61],[94,62,109,62,"font"],[94,66,109,61],[94,67,109,19],[94,70,109,70,"font"],[94,74,109,2],[95,0,111,2],[95,43,111,14,"baseFont"],[95,51,111,2],[95,54,111,27,"ownedFont"],[95,63,111,2],[96,0,112,1],[98,0,114,0],[98,6,114,4,"TSpan"],[98,11,114,0],[100,0,116,7],[100,11,116,16,"setTSpan"],[100,19,116,7],[100,20,116,25,"TSpanImplementation"],[100,39,116,7],[100,41,116,61],[101,0,117,2,"TSpan"],[101,4,117,2,"TSpan"],[101,9,117,7],[101,12,117,10,"TSpanImplementation"],[101,31,117,2],[102,0,118,1],[104,0,120,0],[104,11,120,9,"getChild"],[104,19,120,0],[104,20,120,18,"child"],[104,25,120,0],[104,27,120,70],[105,0,121,2],[105,8,121,6],[105,15,121,13,"child"],[105,20,121,6],[105,25,121,23],[105,33,121,6],[105,37,121,35],[105,44,121,42,"child"],[105,49,121,35],[105,54,121,52],[105,62,121,2],[105,64,121,62],[106,0,122,4],[106,13,122,11],[106,42,122,12],[106,47,122,11],[107,0,122,11],[108,0,122,11],[109,0,122,11],[110,0,122,11],[111,0,122,11],[112,0,122,11],[112,9,122,19,"String"],[112,15,122,25],[112,16,122,26,"child"],[112,21,122,25],[112,22,122,11],[112,23,122,4],[113,0,123,3],[113,5,121,2],[113,11,123,9],[114,0,124,4],[114,13,124,11,"child"],[114,18,124,4],[115,0,125,3],[116,0,126,1],[118,0,141,15],[118,11,141,24,"extractText"],[118,22,141,15],[118,23,141,36,"props"],[118,28,141,15],[118,30,141,54,"container"],[118,39,141,15],[118,41,141,74],[119,0,141,74],[119,8,143,4,"x"],[119,9,141,74],[119,12,153,6,"props"],[119,17,141,74],[119,18,143,4,"x"],[119,19,141,74],[120,0,141,74],[120,8,144,4,"y"],[120,9,141,74],[120,12,153,6,"props"],[120,17,141,74],[120,18,144,4,"y"],[120,19,141,74],[121,0,141,74],[121,8,145,4,"dx"],[121,10,141,74],[121,13,153,6,"props"],[121,18,141,74],[121,19,145,4,"dx"],[121,21,141,74],[122,0,141,74],[122,8,146,4,"dy"],[122,10,141,74],[122,13,153,6,"props"],[122,18,141,74],[122,19,146,4,"dy"],[122,21,141,74],[123,0,141,74],[123,8,147,4,"rotate"],[123,14,141,74],[123,17,153,6,"props"],[123,22,141,74],[123,23,147,4,"rotate"],[123,29,141,74],[124,0,141,74],[124,8,148,4,"children"],[124,16,141,74],[124,19,153,6,"props"],[124,24,141,74],[124,25,148,4,"children"],[124,33,141,74],[125,0,141,74],[125,8,149,4,"inlineSize"],[125,18,141,74],[125,21,153,6,"props"],[125,26,141,74],[125,27,149,4,"inlineSize"],[125,37,141,74],[126,0,141,74],[126,8,150,4,"baselineShift"],[126,21,141,74],[126,24,153,6,"props"],[126,29,141,74],[126,30,150,4,"baselineShift"],[126,43,141,74],[127,0,141,74],[127,8,151,4,"verticalAlign"],[127,21,141,74],[127,24,153,6,"props"],[127,29,141,74],[127,30,151,4,"verticalAlign"],[127,43,141,74],[128,0,141,74],[128,8,152,4,"alignmentBaseline"],[128,25,141,74],[128,28,153,6,"props"],[128,33,141,74],[128,34,152,4,"alignmentBaseline"],[128,51,141,74],[129,0,155,2],[129,8,155,8,"textChildren"],[129,20,155,20],[129,23,156,4],[129,30,156,11,"children"],[129,38,156,4],[129,43,156,24],[129,51,156,4],[129,55,156,36],[129,62,156,43,"children"],[129,70,156,36],[129,75,156,56],[129,83,156,4],[129,86,157,6,"container"],[129,95,157,15],[129,98,158,8],[129,127,158,9],[129,132,158,8],[130,0,158,8],[131,0,158,8],[132,0,158,8],[133,0,158,8],[134,0,158,8],[135,0,158,8],[135,7,158,16,"String"],[135,13,158,22],[135,14,158,23,"children"],[135,22,158,22],[135,23,158,8],[135,24,157,15],[135,27,159,10],[135,31,156,4],[135,34,160,8,"Children"],[135,50,160,17,"count"],[135,55,160,8],[135,56,160,23,"children"],[135,64,160,8],[135,68,160,35],[135,69,160,8],[135,73,160,40,"Array"],[135,78,160,45],[135,79,160,46,"isArray"],[135,86,160,40],[135,87,160,54,"children"],[135,95,160,40],[135,96,160,8],[135,99,161,6,"Children"],[135,115,161,15,"map"],[135,118,161,6],[135,119,161,19,"children"],[135,127,161,6],[135,129,161,29,"getChild"],[135,137,161,6],[135,138,160,8],[135,141,163,6,"children"],[135,149,155,2],[136,0,166,2],[136,11,166,9],[137,0,167,4,"content"],[137,6,167,4,"content"],[137,13,167,11],[137,15,167,13,"textChildren"],[137,27,167,25],[137,32,167,30],[137,36,167,13],[137,39,167,37,"String"],[137,45,167,43],[137,46,167,44,"children"],[137,54,167,43],[137,55,167,13],[137,58,167,56],[137,62,166,9],[138,0,168,4,"children"],[138,6,168,4,"children"],[138,14,168,12],[138,16,168,14,"textChildren"],[138,28,166,9],[139,0,169,4,"inlineSize"],[139,6,169,4,"inlineSize"],[139,16,169,14],[139,18,169,4,"inlineSize"],[139,28,166,9],[140,0,170,4,"baselineShift"],[140,6,170,4,"baselineShift"],[140,19,170,17],[140,21,170,4,"baselineShift"],[140,34,166,9],[141,0,171,4,"verticalAlign"],[141,6,171,4,"verticalAlign"],[141,19,171,17],[141,21,171,4,"verticalAlign"],[141,34,166,9],[142,0,172,4,"alignmentBaseline"],[142,6,172,4,"alignmentBaseline"],[142,23,172,21],[142,25,172,4,"alignmentBaseline"],[142,42,166,9],[143,0,173,4,"font"],[143,6,173,4,"font"],[143,10,173,8],[143,12,173,10,"extractFont"],[143,23,173,21],[143,24,173,22,"props"],[143,29,173,21],[143,30,166,9],[144,0,174,4,"x"],[144,6,174,4,"x"],[144,7,174,5],[144,9,174,7],[144,41,174,25,"x"],[144,42,174,7],[144,43,166,9],[145,0,175,4,"y"],[145,6,175,4,"y"],[145,7,175,5],[145,9,175,7],[145,41,175,25,"y"],[145,42,175,7],[145,43,166,9],[146,0,176,4,"dx"],[146,6,176,4,"dx"],[146,8,176,6],[146,10,176,8],[146,42,176,26,"dx"],[146,44,176,8],[146,45,166,9],[147,0,177,4,"dy"],[147,6,177,4,"dy"],[147,8,177,6],[147,10,177,8],[147,42,177,26,"dy"],[147,44,177,8],[147,45,166,9],[148,0,178,4,"rotate"],[148,6,178,4,"rotate"],[148,12,178,10],[148,14,178,12],[148,46,178,30,"rotate"],[148,52,178,12],[149,0,166,9],[149,5,166,2],[150,0,180,1]],"functionMap":{"names":["<global>","extractSingleFontFamily","parseFontString","extractFont","setTSpan","getChild","extractText"],"mappings":"AAA;ACmB;CDU;AEE;CFkB;OGqB;CHyC;OII;CJE;AKE;CLM;eMe;CNuC"}},"type":"js/module"}]}